#!/bin/sh

if test $# -eq 0; then
   echo "Usage: runtest <program> [args...]";
   exit;
fi
case $1 in
    *.scm)
	PROGNAME=./knox;
	TESTNAME=$(basename $1 .scm);
	;;
    *.knox)
	PROGNAME=./knox;
	;;
    *)
	PROGNAME=$1; shift;
	;;
esac
if test -z "$TESTNAME"; then
    case $1 in
	*.scm)
	    TESTNAME=$(basename $1 .scm)
	    ;;
    esac;
fi;

LOGFILE=${USELOG:-state/$$.log}
ERRFILE=${USELOG:-err/$$.log}
LOGTIME=state/t$$.elapsed
KEEPTIMES=no
KEEPLOGS=no
COMBOLOG=state/success.log

if [ -z "${BIZZARO}" ]; then
    SUCCESS_MSG="SUCCESS"
    FAILURE_MSG="FAILURE"
    SUCCESS_VAL="yes"
    FAILURE_VAL="no"
else
    SUCCESS_MSG="FAILURE"
    FAILURE_MSG="SUCCESS"
    SUCCESS_VAL="no"
    FAILURE_VAL="yes"
fi;

if [ ! -z "${DEBUGGING}" ]; then
    echo "Testing: @test_env@ ${PROGNAME} $* LOGTIME=${LOGTIME} > ${LOGFILE}";
fi;
echo "$$ @test_env@ ${PROGNAME} $* LOGTIME=${LOGTIME} > ${LOGFILE}" >> state/alltests.log
echo "$$ @test_env@ ${PROGNAME} $* LOGTIME=${LOGTIME} > ${LOGFILE}" > state/$$.cmd
    
if test ! -z ${PREAMBLE}; then
   echo "TEST: " ${PROGNAME} $*;
fi;

. ../dbg/runenv.sh
. ./testenv.sh

if [ "${LOGFILE}" != "none" ]; then
    if @test_env@ ${PROGNAME} $* LOGTIME=${LOGTIME} > ${LOGFILE} 2>&1; then
	MSG=${SUCCESS_MSG}
	SUCCESS=${SUCCESS_VAL}
    else
	MSG=${FAILURE_MSG}
	COMBOLOG=state/failure.log
	SUCCESS=${FAILURE_VAL}
    fi;
else
    if @test_env@ ${PROGNAME} $* LOGTIME=${LOGTIME}; then
	MSG=${SUCCESS_MSG}
	SUCCESS=${SUCCESS_VAL}
    else
	MSG=${FAILURE_MSG}
	COMBOLOG=state/failure.log
	SUCCESS=${FAILURE_VAL}
    fi;
fi;

if test -f ${LOGTIME}; then
    TIMING=$(awk '{ print $2}' ${LOGTIME});
    printf "%f\t %s\n" ${TIMING} "${PROGNAME} $*" >> state/timing.log
    if [ "${KEEPTIMES}" = "no" ]; then
	rm -f ${LOGTIME};
    fi;
else
    TIMING=untimed;
fi;

# Save the log file
printf "# TEST: %s\t(t%d) (%ssecs)\n" "${PROGNAME} $*" "$$" "${TIMING}" >> ${COMBOLOG}
if [ -f ${LOGFILE} ]; then
    if [ ! -z "${DEBUGGING}" ]; then
	cat ${LOGFILE} >> ${COMBOLOG} || echo "Log file ${LOGFILE} has disappeared";
    else
	cat ${LOGFILE} >> ${COMBOLOG} || true;
    fi;
    if [ "$SUCCESS" = "no" ]; then
	cp ${LOGFILE} ${ERRFILE}
	if test -z "$TESTNAME"; then
	    printf "Log file in %s\n" "${ERRFILE}";
	else
	    ln -sf $(basename ${ERRFILE}) err/${TESTNAME}.log;
	    printf "Log file in %s (%s)\n" "err/${TESTNAME}.log" "${ERRFILE}";
	fi;
    elif [ "$KEEPLOGS" = "no" ]; then
	rm -f ${LOGFILE} $$.*.started $$.*.cmd;
    fi;
elif [ ! -z "${DEBUGGING}" ]; then
    echo "Warning, log file ${LOGFILE} doesn't exist for ($MSG) test $*";
fi;

# Output the result message
printf "%s: (%s) (t%d)\t%s\n" "$MSG" "$TIMING" "$$" "${PROGNAME} $*";
    
