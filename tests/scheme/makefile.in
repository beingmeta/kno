# -*- Mode: Makefile; -*-
# Copyright (C) 2004, 2005 beingmeta, inc.
# This file is a part of beingmeta's FramerD implementation, EFramerD.
MAKEFILE_VERSION="$Id$"

CC	= @CC@
XCFLAGS=
CFLAGS=@CFLAGS@ @PROFILING@ @DREENTRANT@ @dynamic_cflag@ -DFD_TESTCONFIG=1 \
	 -I./include -I../../include $(XCFLAGS)
LDFLAGS=@LDFLAGS@ $(EFENCE) @TESTLDFLAGS@ -L../../lib
LIBS=@LIBS@ -lm -lz -lu8 -lu8fns -lu8io

EXTRA_LIBS	= ../../lib/libtexttools@suffix@.a \
		  ../../lib/libtagger@suffix@.a \
		  ../../lib/libfdweb@suffix@.a \
		  ../../lib/libfdschemeio@suffix@.a
DESTDIR		=
prefix		= @prefix@
exec_prefix	= @exec_prefix@
LIBINSTALLDIR	= $(DESTDIR)@libdir@
CLEAN		= @CLEAN@
INSTALL		= @INSTALL@
#RUNENV		= LD_LIBRARY_PATH=../../lib DYLD_LIBRARY_PATH=../../lib 
VALGRIND	= valgrind --tool=memcheck --leak-check=yes --num-callers=9
TESTPROG	= 
RUNENV		= 
TESTSIZE	= 64
TESTCONFIG	= 
RUNTEST		= $(RUNENV)$(TESTPROG)
DBTEST_FILES	= r4rs.scm misctest.scm seqtest.scm choicetest.scm dbtest.scm

TESTBIN=fdeval fdconsole fdexec fdbatch fdbserver fdserv # fdsh

all: $(TESTBIN) 

%.o: %.c
	$(CC) $(CFLAGS) -o $@ -c $<

# This is for making shared test programs, when there are associated problems
%.shared: %.c
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS) \
		-lfdtype -lfddb -lfddbfile -lfdscheme -lfdschemeio

../../lib/libfdweb@suffix@.a:
	cd ../..; make lib/libfdweb@suffix@.a
../../lib/libfdschemeio@suffix@.a:
	cd ../..; make lib/libfdschemeio@suffix@.a
../../lib/libfdscheme@suffix@.a:
	cd ../..; make lib/libfdscheme@suffix@.a
../../lib/libfdtype@suffix@.a:
	cd ../..; make lib/libfdtype@suffix@.a
../../lib/libfddb@suffix@.a:
	cd ../..; make lib/libfddb@suffix@.a
../../lib/libfddbfile@suffix@.a:
	cd ../..; make lib/libfddbfile@suffix@.a
../../lib/libtexttools@suffix@.a:
	cd ../..; make lib/libtexttools@suffix@.a
../../lib/libfdbserv@suffix@.a:
	cd ../..; make lib/libfdbserv@suffix@.a

$(TESTBIN): $(EXTRA_LIBS) \
            ../../lib/libfdscheme@suffix@.a \
	    ../../lib/libfddb@suffix@.a ../../lib/libfdtype@suffix@.a

%: %.c $(EXTRA_LIBS) ../../lib/libfdscheme@suffix@.a \
	../../lib/libfddbfile@suffix@.a ../../lib/libfddb@suffix@.a \
	../../lib/libfdtype@suffix@.a
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS) -lu8stdio
fdtypeserver: fdtypeserver.c $(EXTRA_LIBS) \
	../../lib/libfdscheme@suffix@.a \
	../../lib/libfddbfile@suffix@.a ../../lib/libfddb@suffix@.a \
	../../lib/libfdtype@suffix@.a
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS) -lu8stdio
fdbserver: fdbserver.c $(EXTRA_LIBS) \
	../../lib/libfdbserv@suffix@.a \
	../../lib/libfdscheme@suffix@.a \
	../../lib/libfddbfile@suffix@.a ../../lib/libfddb@suffix@.a \
	../../lib/libfdtype@suffix@.a
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS) -lu8stdio
fdserv: fdserv.c $(EXTRA_LIBS) \
	../../lib/libfdscheme@suffix@.a \
	../../lib/libfddbfile@suffix@.a ../../lib/libfddb@suffix@.a \
	../../lib/libfdtype@suffix@.a
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $^ $(LIBS) -lu8stdio

clean: testclean
	rm -f $(TESTBIN)

testclean:
	rm -f *.log *.err *.done *.finished *.pid *.died
	rm -f temp.* utf8-temp.* testdb* memoization.index test.dtype
	rm -f logfile thirty2fifty thirtythree 
alltests: dtypetests tabletests indextests hashindextests dbtests
dtypetests:
	@echo "***" Running scheme tests to exercise the data/eval layer
	$(RUNTEST) ./fdexec $(TESTCONFIG) r4rs.scm
	$(RUNTEST) ./fdexec $(TESTCONFIG) exceptions.scm
	$(RUNTEST) ./fdexec $(TESTCONFIG) choicetest.scm
	$(RUNTEST) ./fdexec $(TESTCONFIG) seqtest.scm
	$(RUNTEST) ./fdexec $(TESTCONFIG) cachecall.scm
	$(RUNTEST) ./fdexec $(TESTCONFIG) misctest.scm
	$(RUNTEST) ./fdexec $(TESTCONFIG) texttest.scm
	$(RUNTEST) ./fdexec $(TESTCONFIG) threadtest.scm
	$(RUNTEST) ./fdexec $(TESTCONFIG) i18n.scm

tabletests:
	@echo "***" Running scheme tests to exercise the table/index layer
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm temp.table $(TESTSIZE)
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm temp.table
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm temp.index $(TESTSIZE)

indextests:
	rm -f edit.dtype
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm temp.index $(TESTSIZE)
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm temp.index
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm CACHELEVEL=2 temp.index
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm temp.index edit.dtype
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm temp.index edit.dtype
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm temp.index edit.dtype
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm CACHELEVEL=2 temp.index $(TESTSIZE)
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm CACHELEVEL=2 temp.index
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm temp.index
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm CACHELEVEL=2 temp.index edit.dtype
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm CACHELEVEL=2 temp.index edit.dtype
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm CACHELEVEL=2 temp.index edit.dtype

hashindextests:
	rm -f edit.dtype
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm temp.hashindex $(TESTSIZE)
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm temp.hashindex
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm CACHELEVEL=2 temp.hashindex
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm temp.hashindex edit.dtype
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm temp.hashindex edit.dtype
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm temp.hashindex edit.dtype
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm CACHELEVEL=2 temp.hashindex $(TESTSIZE)
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm CACHELEVEL=2 temp.hashindex
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm temp.hashindex
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm CACHELEVEL=2 temp.hashindex edit.dtype
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm CACHELEVEL=2 temp.hashindex edit.dtype
	$(RUNTEST) ./fdexec $(TESTCONFIG) tabletest.scm CACHELEVEL=2 temp.hashindex edit.dtype

dbtests:
	@echo "***" Running scheme tests to exercise the database layer
	$(RUNTEST) ./fdexec dbtest.scm $(TESTCONFIG) COUNT=$(TESTSIZE) testdb init $(DBTEST_FILES)
	$(RUNTEST) ./fdexec dbtest.scm $(TESTCONFIG) COUNT=$(TESTSIZE) testdb
	$(RUNTEST) ./fdexec dbtest.scm $(TESTCONFIG) COUNT=$(TESTSIZE) CACHELEVEL=2 testdb
	$(RUNTEST) ./fdexec dbtest.scm $(TESTCONFIG) COUNT=$(TESTSIZE) CACHELEVEL=2 testdb init $(DBTEST_FILES)
	$(RUNTEST) ./fdexec dbtest.scm $(TESTCONFIG) COUNT=$(TESTSIZE) CACHELEVEL=2 testdb

dbhashtests:
	@echo "***" Running scheme tests to exercise the database layer with hashindices
	make FD_HASHINDEX=yes dbtests
	make FD_HASHINDEX="(COMPRESS B40)" dbtests

dbhash32tests:
	@echo "***" Running scheme tests to exercise the database layer with hashindices
	make FD_HASHINDEX=yes dbtests
	make FD_HASHINDEX="(COMPRESS B32)" dbtests

memtests:
	@echo "***" Running alltests with memory debugging
	make "TESTPROG=$(VALGRIND)" TESTSIZE=$(TESTSIZE)/8 alltests

memdtypetests:
	@echo "***" Running tests on data/eval layers with memory debugging
	make "TESTPROG=$(VALGRIND)" TESTSIZE=$(TESTSIZE)/8 dtypetests

memtabletests:
	@echo "***" Running tests on table/index layers with memory debugging
	make "TESTPROG=$(VALGRIND)" TESTSIZE=$(TESTSIZE)/8 tabletests

memdbtests:
	@echo "***" Running tests on database layers with memory debugging
	make "TESTPROG=$(VALGRIND)" TESTSIZE=$(TESTSIZE)/8 dbtests dbhashtests

heaptests:
	@echo "***" Running alltests with tcmalloc memory debugging
	make "RUNENV=HEAPCHECK=normal" TESTSIZE=$(TESTSIZE)/8 alltests

heapdtypetests:
	@echo "***" Running tests on data/eval layers with tcmalloc memory debugging
	make "RUNENV=HEAPCHECK=normal" TESTSIZE=$(TESTSIZE)/8 dtypetests

heaptabletests:
	@echo "***" Running tests on table/index layers with tcmalloc memory debugging
	make "RUNENV=HEAPCHECK=normal" TESTSIZE=$(TESTSIZE)/8 tabletests

heapdbtests:
	@echo "***" Running tests on database layers with tcmalloc memory debugging
	make "RUNENV=HEAPCHECK=normal" TESTSIZE=$(TESTSIZE)/8 dbtests dbhashtests

randomtests:
	@echo "***" Running alltests with a really random seed
	make "TESTCONFIG=RANDOMSEED=TIME" alltests

chaintest:
	@echo "***" Testing scripts which call CHAIN
	fdexec chaintest.scm
	fdexec chaintest.scm 0 30
	fdexec chaintest.scm 10 50

batchtest:
	@echo "***" Testing fdbatch execution success and cleanliness
	rm -f countup.log countup.err countup.done countup.finished countup.died
	./fdbatch countup.scm "countup.finished" 10 1; sleep 3
	@if (test ! -f countup.pid); then echo error; exit 1; fi;
	sleep 12;
	@# This was written by fdbatch itself
	@if (test ! -s countup.done); then echo countup.done error; exit 1; fi;
	@# This was written by the script
	@if (test ! -s countup.finished); then echo fdbatch success countup.finished error; exit 1; fi;
	@if (test ! -f countup.err); then echo fdbatch success countup.err error; exit 1; fi;
	@if (test ! -s countup.log); then echo fdbatch success countup.log error; exit 1; fi;
	@# These should have been deleted on successful exit
	@if (test -f countup.died); then echo fdbatch success countup.died error; exit 1; fi;
	@if (test -f countup.pid); then echo fdbatch success countup.pid error; exit 1; fi;
	rm -f countup.log countup.err countup.done countup.finished countup.died
	@echo "***" "Done with fdbatch success test"
	./fdbatch countup.scm ERROR=yes "countup.finished" 10 1; sleep 3
	sleep 12;
	@# This should have been deleted by the watch process
	@if (test -f countup.pid); then echo fdbatch failure countup.pid error; exit 1; fi;
	@if (test -f countup.done); then echo fdbatch failure countup.done error; exit 1; fi;
	@# This should have been created at exit
	@if (test ! -f countup.died); then echo fdbatch failure countup.died error; exit 1; fi;
	@echo "***" "Done with fdbatch failure test"
	./fdbatch countup.scm "countup.killed" 10 1; sleep 3
	kill -9 `cat countup.pid`; sleep 12
	@# This should have been deleted by the watch process
	@if (test -f countup.pid); then echo fdbatch failure countup.pid error; exit 1; fi;
	@# This should have been deleted by the watch process
	@if (test -f countup.done); then echo fdbatch failure countup.done error; exit 1; fi;
	@# This should have been created at exit by the watch process
	@if (test ! -f countup.died); then echo fdbatch failure countup.died error; exit 1; fi;
	@echo "***" "Done with fdbatch kill test"

batchchaintest:
	@echo "***" Testing batch scripts which call CHAIN
	fdbatch chaintest.scm
