#!@SCRIPT_SHELL@
TARGETS="@servlet_rundir@/ @daemon_rundir@/"
if [ $# -gt 0 ]; then TARGETS="$*"; fi
KILLWAIT=2
checkpid ( ) {
    if [ -z "$0" ]; then
	retval=0;
    elif ps -p $0 2>&1 > /dev/null; then
	retval=1;
    else
	retval=0;
    fi;}
for rundir in ${TARGETS}; do
    for ppid in ${rundir}/*.ppid; do
	if [ `basename ${ppid}` != "*.ppid" ]; then
            export pidnum=`cat ${ppid}`;
            echo "knostop: Terminating manager ${ppid} (${pidnum})";
     	    unset LD_LIBRARY_PATH; unset DYLD_LIBRARY_PATH; sudo kill ${pidnum};
	fi;
    done;
done;
#sleep ${KILLWAIT};
for rundir in ${TARGETS}; do
    for ppid in ${rundir}/*.ppid; do
	if [ -f ${ppid} ]; then
	    export base=`basename ${ppid} .ppid`;
            export pidnum=`cat ${ppid}`;
	    echo "knostop: Waiting for stubborn manager ${ppid} (${pidnum})";
	    if [ -f ${ppid} ]; then sleep 1; fi
	    if [ -f ${ppid} ]; then sleep 2; fi
	    if [ -f ${ppid} ]; then sleep 4; fi
	    echo "knostop: Killing stubborn manager ${ppid} (${pidnum})";
     	    unset LD_LIBRARY_PATH; unset DYLD_LIBRARY_PATH; \
	            sudo kill -9 ${pidnum} &&
    		unset LD_LIBRARY_PATH; unset DYLD_LIBRARY_PATH; \
	            sudo rm -f ${ppid} ${rundir}/${base}.nospawn;
	    if [ -f ${ppid}]; then\
	      echo "Warning: (knostop) Server manager ${ppid} (${pidnum}) couldn't be terminated or killed"; 
	    fi;
	fi;
    done;
done;
#sleep ${KILLWAIT};
for rundir in ${TARGETS}; do
    for pid in ${rundir}/*.pid; do
	if [ -f ${pid} ]; then
	   export pidnum=`cat ${pid}`
	   echo "knostop: Waiting for stubborn server ${pid} (${pidnum})";
	   if [ -f ${pid} ]; then kill ${pidnum}; sleep 1; fi
	   if [ -f ${pid} ] && checkpid ${pidnum}; then sleep 2; fi
	   if [ -f ${pid} ] && checkpid ${pidnum}; then sleep 4; fi
     	   if [ -f ${pid} ]; then 
	       echo "knostop: Terminating server ${pid} (${pidnum})";
	       unset LD_LIBRARY_PATH; unset DYLD_LIBRARY_PATH; \
	         sudo kill ${pidnum}; 
	   else echo "knostop: Server ${pid} died of natural causes"; fi
	fi;
    done;
done;
#sleep ${KILLWAIT};
for rundir in ${TARGETS}; do
    for pid in ${rundir}/*.pid; do
	if [ `basename ${pid}` != "*.pid" ]; then
     	    if [ -f ${pid} ]; then 
		export pidnum=`cat ${pid}`
		if checkpid ${pidnum}; then
		    echo "knostop: Killing stubborn server ${pid} (${pidnum})";
		    unset LD_LIBRARY_PATH; unset DYLD_LIBRARY_PATH; \
		      sudo kill -9 ${pidnum} && 
			  unset LD_LIBRARY_PATH; unset DYLD_LIBRARY_PATH; \
		            sudo rm -f ${pid};
		    if [ -f ${pid} ]; then
			sleep 1;
			if [ -f ${pid} ]; then sleep 1; fi
			if [ -f ${pid} ]; then sleep 1; fi
			# If the file still exists, check the process
			if checkpid ${pidnum}; then
			    echo "Warning: (knostop) Server ${pid} (${pidnum}) didn't die";
			else echo "knostop: removing server pid file ${pid}";
			     sudo rm -f ${pid};
			fi;
		    fi;
		else echo "knostop: Removing leftover server pid file ${pid}";
		     sudo rm -f ${pid};
		fi;
	    else echo "knostop: Server ${pid} eventually died of natural causes"; fi
	fi;
    done;
done;
