#!/usr//bin/fdexec
;; -*- Mode: scheme -*-

(use-module 'texttools)

(define lexicon-file (get-component "english/compiled/lexicon"))

(define (get-lexicon-source)
  (try (config 'lexicon)
       (tryif (file-exists? lexicon-file)
	      lexicon-file)
       (tryif (and (exists? (config 'lexdata))
		   (file-exists? (mkpath  "/lexicon")))
	      (mkpath (config 'lexdata) "/lexicon"))
       lexicon-file))

(define (show-pos-data word lexicon)
  (let* ((grammar (get lexicon '%grammar))
	 (arcs (first grammar))
	 (term (if (string? word)
		   (if (position #\Space word) (segment word " ")
		       (if (has-suffix word ".")
			   (list (subseq word 0 -1) ".")
			   word))
		   word))
	 (lexentry (get lexicon term)))
    (unless (exists? lexentry)
      (message "The word \"" word "\" doesn't have an entry in " lexicon))
    (when (exists? lexentry)
      (dotimes (i (length lexentry))
	(when (elt lexentry i)
	  (lineout (elt arcs i) ": " (elt lexentry i))))
      (lineout "Infinite weight for"
	(dotimes (i (length lexentry))
	  (unless (elt lexentry i) (printout " " (elt arcs i))))))))

(define (main word (lex #f))
  (let* ((lexsource (get-lexicon-source))
	 (lexicon (open-index lexsource)))
    (message "Using data from " lexsource)
    (show-pos-data word lexicon)))


