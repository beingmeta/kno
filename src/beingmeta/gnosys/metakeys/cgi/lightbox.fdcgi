(load-config (get-component "site.cfg"))

(use-module 'fdweb)
(use-module 'xhtml)
(use-module 'xhtml/clickit)
(use-module 'brico)
(use-module 'tracer)
(use-module '{metakeys metakeys/web metakeys/disambiguate})

(reload-module 'metakeys/web)
(reload-module 'xhtml/clickit)

(default! version 0)
(set! version (1+ version))

(define %profile #[])

(define searchids
  (or (config 'searchids #f)
      (let ((table (make-hashtable)))
	(config! 'searchids table)
	table)))

(define (pager-image imageoid)
  (img src (thumbnail-url (rewrite-url (get imageoid 'url)))
       class "pager_image" oid imageoid
       alt (get imageoid 'url)
       title "Add this image to the lightbox"
       onclick "pager_click(this,event);"))
(define (lightbox-image imageoid selected (width #f))
  (anchor* (scripturl "index.fdcgi" 'image imageoid 'command 'image)
	   ((target "_new"))
	   (img (src (thumbnail-url (rewrite-url (get imageoid 'url))))
		(highsrc (rewrite-url (get imageoid 'url)))
		(class "lightbox_image")
		(oid imageoid) (id (oid2id imageoid "LBI"))
		(alt (get imageoid 'url))
		(title "click for more details, ctrl-click to remove")
		(onclick "lightbox_click(this,event);")
		(onmousedown "image_mousedown(this,event);")
		(onmouseup "image_mouseup(this,event);")
		(style (if (not selected)
			   (if width
			       (stringout "display: none; width: " width ";")
			       "display: none;")
			   (if width (stringout "width: " width ";"))))))
  (if selected
      (input class "hidden" id (oid2id imageoid "LBC")
	 type "checkbox" name "IMAGE" value imageoid
	 "checked")
      (input class "hidden" id (oid2id imageoid "LBC")
	     type "checkbox" name "IMAGE" value imageoid)))

(define (pagercontrols resultdata searchpos pagesize)
  (let* ((results (first resultdata))
	 (scores (second resultdata))
	 (pagestart searchpos)
	 (pageend (min (+ pagestart pagesize) (length results)))
	 (prevpage (- searchpos pagesize))
	 (nextpage (1+ pageend))
	 (maxpage (length results))
	 (maxscore (get scores (elt results searchpos)))
	 (minscore (get scores (elt results (1- pageend)))))
    (div (class "pagebar")
      (if (> prevpage 0)
	  (img class "leftbutton"
	       src "/graphics/prev_arrow" alt "back"
	       title "click to go back one page of images"
	       onclick (stringout "pager_go(" prevpage ");"))
	  (img class "leftbutton"
	       src "/graphics/stop_dot" alt "start"))
      (if (< nextpage maxpage)
	  (img class "rightbutton" src "/graphics/next_arrow" alt "more"
	       title "click to go to the next page of images"
	       onclick (stringout "pager_go(" nextpage ");"))
	  (img class "rightbutton" src "/graphics/stop_dot" alt "no more"))
      (span (style "font-weight: bold; font-size: 115%")
	"Showing " pagesize " of " (length results) " images "
	"(" pagestart " to " (1- pageend)")") (br)
      (span (style "color: red; font-size: 115%; font-weight: bold;")
	(- (length results) (fourth resultdata)))
      " images were found by inference, while "
      (span (style "font-weight: bold;") (fourth resultdata))
      " images directly matched terms in the query" (br)
      (if (= maxscore minscore)
	  (xmlout "All of the images on this page have a "
		  (strong "rank score") " of "
		  (strong maxscore) (br))
	  (xmlout (strong "Scores:  ")
		  "All of the images on this page have "
		  (strong "rank scores") " between "
		  (strong maxscore " and " minscore) (br)))
      (strong
       "Show "
       (input type 'text size 8 name "PAGESIZE"
	      value (lisp->string pagesize))
       " images per page"))))

(define (main searchid (searchpos 0) (image {}) (pagesize 25))
  (when (string? pagesize) (set! pagesize (string->lisp pagesize)))
  (let* ((searchinfo (get searchids searchid))
	 (results (first searchinfo))
	 (scores (second searchinfo)))
    (stylesheet! "metakeys.css")
    (javascript! "metakeys.js")
    (div (class "menubar")
      "Click on images in the"
      (span (style "background-color: lightblue;") " pager ")
      " to add them to the"
      (span (style "background-color: gold;") " lightbox ")
      (img src "/graphics/bv_menubar" class "applogo")
      (img src "/graphics/bm_menubar" class "sitelogo"))
    (form (action "lightbox.fdcgi" class "lightbox")
      (let* ((pagestart searchpos)
	     (pageend (min (+ pagestart pagesize) (length results)))
	     (prevpage (- pagestart pagesize))
	     (nextpage (1+ pageend))
	     (maxscore (get scores (elt results searchpos)))
	     (minscore (get scores (elt results (1- pageend))))
	     (displayed-results (subseq results pagestart pageend)))
	(input type "hidden" name "SEARCHID" value searchid id "searchid")
	(input type "hidden" id "searchpos" name "SEARCHPOS" value searchpos)
	(input type "hidden" name "COMMAND" value 'search
	       id "command_elt")
	(div (class "lightbox")
	  (div (class "label") "Lightbox")
	  (div (class "instructions")
	    (strong "Click") " on an image to examine it more closely;" (br)
	    (strong "Hold down") " the mouse button for full size;" (br)
	    (strong "Ctrl-click") " to remove it from the lightbox." (br)
	    (actionclick "index.fdcgi" "Find images like these"
			 "Use these images as the basis of a query") (br)
	    (acclick "index.fdcgi" 'tag
		     "Annotate these images"
		     "Add new metakeys to these images"))
	  (div (class "sample_image" id "sample_image_block"
		      onclick "hide_sample_image();")
	    "Click the image to go back to the lightbox" (br)
	    (img src "" id "sample_image"))
	  (div (class "content" id "lightbox_content")
	    (let ((wide (and (> (choice-size image) 25) "32pt")))
	      (doseq (each (sorted image)) (lightbox-image each #t wide))
	      (doseq (each displayed-results)
		(unless (overlaps? each image)
		  (lightbox-image each #f wide))))))
	(div (class "pager")
	  (div (class "label") "Pager")
	  (pagercontrols searchinfo searchpos pagesize)
	  (div (class "content")
	    (doseq (image displayed-results)
	      (pager-image image))))))))
