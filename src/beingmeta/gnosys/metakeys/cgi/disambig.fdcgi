;;; -*- Mode: Scheme; -*-

(define load-start (elapsed-time))
(load-config (get-component "site.cfg"))

(use-module 'fdweb)
(use-module 'xhtml)
(use-module 'brico)
(use-module 'tracer)
(use-module '{metakeys metakeys/web metakeys/disambiguate})
(use-module '{metakeys/suggestions})

(define (main keywords (keyterm #f) (language @?english))
  ;; (config! 'calltrack "/tmp/disambig.log")
  (cgiset! 'content-type "Content-Type: text/xml;")
  (cgiset! 'doctype #f)
  (cgiset! 'tracep #t)
  (when (and keyterm (eq? (elt keyterm -1) #\:))
    (set! keyterm (subseq keyterm 0 -1)))
  (tracer 1 "Disambiguating " keywords)
  (let* ((keylist (disambiguate (string->keylist keywords language)
				disambig-indices))
	 (suggestions (get-suggestions (qc disambig-indices)
				       (qc (keylist-actual keylist))
				       (qc))))
    (cgiset! 'keywords keylist)
    (tracer 1 "Done with disambiguation")
    (ipeval (doseq (entry (keylist-entries keylist))
		   (conceptdetail-compute (keyentry-actual entry)
					  language (keyentry-base entry))))
    (tracer 1 "Done with details prefetch")
    (xmlblock '(response)
      (xmlblock `(disambiguation (query ,keywords))
	(doseq (entry (keylist-entries keylist))
	  (let ((base (keyentry-base entry)))
	    (do-choices (meaning (keyentry-actual entry))
	      (xmlempty 'meaning
			'oid meaning 'base base
			'dterm (get-dterm meaning language base)
			'gloss (get-gloss meaning language)
			'indirect (concept-frequency meaning)
			'direct (direct-frequency meaning)))))
	(doseq (concept (subseq suggestions 0 (min (length suggestions) 20)))
	  (xmlempty 'suggestion
		    'oid concept
		    'dterm (get-dterm concept language #f #t)
		    'gloss (get-gloss concept language))))))
  ;; (config! 'calltrack #f)
  )






