#!/usr/bin/env fdexec
;;; -*- Mode: fdscript; -*-

(use-module 'gnosys)
(auto-cache-file-pools)
(auto-cache-file-indices)
(set-notify! #t)

(define-if-needed memgap 100000000)
(define memlimit (+ memgap (memusage)))

(define (get% n d) (stringout (inexact->string (/ (* 100.0 n) d) 2) "%"))
(define (show% n d)
  (stringout n "/" d "=" (inexact->string (/ (* 100.0 n) d) 2) "%"))

(define (get-name-strings concept language)
  (let* ((candidates (get concept (choice 'names language)))
	 (strings (filter-choices (string candidates)
		    (capitalized? string)
		    (or (test concept 'sense-category 'noun.location)
			(uppercase? string)
			(find #\Space string)))))
    (choice strings (stdstring strings))))
(define (get-noun-phrase-strings concept language)
  (let* ((candidates (get concept language))
	 (strings (filter-choices (string candidates)
		    (not (capitalized? string))
		    (find #\Space string))))
    (choice strings (stdstring strings))))

(define (index-concepts name-pool concept-index indices language)
   (let ((i 0))
     (cache-index indices)
     ;; (preload-file-index! indices)
     (set! memlimit (+ (memusage) memgap))
     (when (> (memusage) memlimit)
       (swap-out-indices)
       (set! memlimit (+ (memusage) memgap)))
     (do-pool (name name-pool)
       (let ((frames (choice (find-frames indices
				 (choice gn/proper-names gn/compound-names)
			       (get-name-strings name language))
			     (find-frames indices gn/noun-phrases
			       (get-noun-phrase-strings name language)))))
	 (index-frame concept-index frames gn/refpoints name)
	 (set! i (+ i 1))
	 (when (zero? (remainder i 500))
	   (notify "Processed " (show% i (pool-load name-pool))
		   " names, finding " (choice-size frames)
		   " frames for " name))
	 (swap-out name)))))

(define (describe-usage)
  (lineout "index-concepts [LANGUAGE=??] <name pool> <concept index> indices..."))

(define (main name-pool concept-index . indices)
  (cond ((< nargs 3) (describe-usage))
	(else (index-concepts (use-pool name-pool)
			      (use-index concept-index)
			      (qc (open-index (elts indices)))
			      (if (bound? language)
				  (if (oid? language) language
				      (try (?? 'langid language) (?? 'langid 'en)))
				  (?? 'langid 'en))))))





