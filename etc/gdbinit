set env LD_LIBRARY_PATH ../lib:../../lib
set env DYLD_LIBRARY_PATH ../lib:../../lib
set print elements 64
define dtype
  printf "%s\n",fd_dtype2string($arg0)
end
define showtype
  printf "object type is 0x%x: %s\n",_fd_ptr_type($arg0),fd_type_names[_fd_ptr_type($arg0)]
end
define refcount
  if (($arg0)&3)
  print "not a cons" 
  else
  printf "object refcount=%d\n",((((struct FD_CONS *)$arg0)->consbits)>>7)
  end
end
define showstruct 
  print *((struct $arg1 *)($arg0))
end
define showfield
  print ((struct $arg1 *)($arg0))->$arg2
end
define showstring
  set print elements 0
  print ((struct FD_STRING *)($arg0))->bytes
  set print elements 16
end
define showsymbol
  printf "%s\n",((struct FD_STRING *)(fd_symbol_names[((($arg0)>>2)&0x7FFFFF)]))->bytes
end
define showoid
  print/x fd_base_oids[(($arg0>>2)&0x3FF)]+($arg0>>12)
end
define showcar
  showtype((((struct FD_PAIR *)$arg0)->car))
  print/x (((struct FD_PAIR *)$arg0)->car)
end
define showcdr
  showtype (((struct FD_PAIR *)$arg0)->cdr)
  print/x (((struct FD_PAIR *)$arg0)->cdr)
end
define showvelt
   print/x ((((struct FD_VECTOR *)$arg0)->data)[$arg1])
   showtype $
end
define showcelt
  print/x ((&((struct FD_CHOICE *)$arg0)->elt0)[$arg1])
  showtype $  
end
break u8_seterr
break u8_raise
break fd_err
break fd_seterr
set env MALLOC_CHECK_=2
