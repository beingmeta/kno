#!/bin/sh
#
# Startup script for FramerD servers
# chkconfig:		- 80 80
# processname: 		framerd
# pidfile: 		/var/run/framerd.pid
### BEGIN INIT INFO
# Provides:		framerd
# Required-Start:	$local_fs $network $named $syslog
# Required-Stop:	$local_fs $network $named $syslog
# Default-Start:  	3 4 5
# Default-Stop:  	0 1 6
# Short-Description: 	Start configure FramerD servers
# Description: 		Start the FramerD servers described in etc/framerd/servers, including data and API servers
# X-Interactive:	false
### END INIT INFO

export FDSERVER=@prefix@/bin/fdserver
export FDSERVLET=@prefix@/bin/fdservlet
export FDAEMON_USER=@fdaemon@
export FDAEMON_GROUP=@admin_group@
export WEB_USER=@webuser@
CTLFILE=@config_dir@/servers
PIDFILE=/var/run/framerd.pid
STATFILE=/var/run/framerd.status

# See how we were called.
case "$1" in
  start)
	if test -f @framerd_rundir@/_started;
	then echo "FramerD daemons/servlets already started"; exit;
	else date > @framerd_rundir@/_started; 
	     rm -f @framerd_rundir@/_upstart @framerd_rundir@/_system;
	     cp @framerd_rundir@/_started @framerd_rundir@/_sysv;
	fi
	fdstartall;
	;;
  stop)
	fdstopall;
	rm -f @daemon_rundir@/_started @daemon_rundir@/_sysv;
	;;
  status)
	if test -f @framerd_rundir@/_started;
	    echo "Started: " `cat @framerd_rundir@/_started`
	    echo -n "Daemons: "; ls @daemon_rundir@/*.ppid;
	    echo -n "Servlets: "; ls @servlet_rundir@/*.ppid;
	fi
	;;
  restart|force-reload)
	$0 stop
	echo "Sleeping for 5 seconds before restart"
	sleep 5
	$0 start
	;;
  *)
	echo "Usage: $0 {start|stop|restart|status}"
	exit 1
esac

exit 0
