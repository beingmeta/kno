#!/bin/sh
#
# Startup script for FramerD servers
# chkconfig:		- 80 80
# processname: 		fdmanager
# pidfile: 		/var/run/framerd.pid
### BEGIN INIT INFO
# Provides:		fdmanager
# Required-Start:	$local_fs $network $named $syslog
# Required-Stop:	$local_fs $network $named $syslog
# Default-Start:  	3 4 5
# Default-Stop:  	0 1 6
# Short-Description: 	Start configure FramerD servers
# Description: 		Start the FramerD servers described in etc/framerd/servers, including data and API servers
# X-Interactive:	false
### END INIT INFO

export FDMANAGER=@prefix@/bin/fdmanager
export FDSERVER=@prefix@/bin/fdserver
export FDSERVLET=@prefix@/bin/fdservlet
export FDAEMON_USER=@fdaemon@
export FDAEMON_GROUP=@admin_group@
export WEB_USER=@webuser@
CTLFILE=@config_dir@/servers
PIDFILE=/var/run/framerd.pid
STATFILE=/var/run/framerd.status

# See how we were called.
case "$1" in
  start)
	if test -f @rundir@/framerd/_started;
	then echo "FramerD daemons/servlets already started"; exit;
	else date > @rundir@/framerd/_started;
	fi
	for ctl in @config_dir@/daemons/*; do
	    if test ! -f ${ctl}; then echo > /dev/null;
	    elif (readlink ${ctl}>/dev/null);
	    then FD_DAEMONIZE=3 \
		 LOGFILE=@logdir@/framerd/`basename ${ctl}`.log \
		 ${FDSERVER} `readlink ${ctl}` "PORT=`basename ${ctl}`" \
		             STATEDIR=@rundir@/framerd;
	    else FD_DAEMONIZE=3 \
		 LOGFILE=@logdir@/framerd/`basename ${ctl}`.log \
		 ${FDSERVER} ${ctl} "PORT=`basename ${ctl}`" \
		             STATEDIR=@rundir@/framerd;
	    fi;
	done;
	for ctl in @config_dir@/servlets/*@* @config_dir@/servlets/*:*; do
	    if test ! -f ${ctl}; then echo > /dev/null;
	    elif (readlink ${ctl}>/dev/null);
	    then FD_DAEMONIZE=3 \
		 LOGFILE=@logdir@/fdserv/`basename ${ctl}`.log \
		 ${FDSERVLET} `basename ${ctl}` "CONFIG=`readlink ${ctl}`" \
		             STATEDIR=@rundir@/fdserv;
	    else FD_DAEMONIZE=3 \
		 LOGFILE=@logdir@/fdserv/`basename ${ctl}`.log \
		 ${FDSERVLET} `basename ${ctl}` "CONFIG=${ctl}" \
		             STATEDIR=@rundir@/fdserv;
	    fi;
	done;
	for ctl in @config_dir@/servlets/*.sock; do
	    if test ! -f ${ctl}; then echo > /dev/null;
	    elif (readlink ${ctl}>/dev/null);
	    then FD_DAEMONIZE=3 \
		 LOGFILE=@logdir@/fdserv/`basename ${ctl} .sock`.log \
		 ${FDSERVLET} `basename ${ctl}` "CONFIG=`readlink ${ctl}`" \
		             STATEDIR=@rundir@/fdserv;
	    else FD_DAEMONIZE=3 \
		 LOGFILE=@logdir@/fdserv/`basename ${ctl} .sock`.log \
		 ${FDSERVLET} `basename ${ctl}` "CONFIG=${ctl}" \
		             STATEDIR=@rundir@/fdserv;
	    fi;
	done;
	;;
  stop)
	for ctl in @config_dir@/daemons/*; do
	    ppid_file=@rundir@/framerd/`basename ${ctl}`.ppid
	    if test ! -f ${ppid_file}; then echo > /dev/null;
	    elif test @rundir@/framerd/_started -nt ${ppid_file};
	    then rm ${ppid_file};
	    else kill `cat ${ppid_file}`;
	    fi;
	done;
	for ctl in @config_dir@/servlets/*@* @config_dir@/servlets/*:*; do
	    ppid_file=@rundir@/fdserv/`basename ${ctl}`.ppid
	    if test ! -f ${ppid_file}; then echo > /dev/null;
	    elif test @rundir@/framerd/_started -nt ${ppid_file};
	    then rm ${ppid_file};
	    else kill `cat ${ppid_file}`;
	    fi;
	done;
	for ctl in @config_dir@/servlets/*.sock; do
	    ppid_file=@rundir@/fdserv/`basename ${ctl} .sock`.ppid
	    if test ! -f ${ppid_file}; then echo > /dev/null;
	    elif test @rundir@/framerd/_started -nt ${ppid_file};
	    then rm ${ppid_file};
	    else kill `cat ${ppid_file}`;
	    fi;
	done;
	rm  @rundir@/framerd/_started;
	;;
  status)
	if (test -f $STATFILE) then
	  cat $STATFILE
	else echo "fdmanager not running"
	fi
	;;
  restart|force-reload)
	$0 stop
	echo "Sleeping for 5 seconds before restart"
	sleep 5
	$0 start
	;;
  *)
	echo "Usage: $0 {start|stop|restart|status}"
	exit 1
esac

exit 0
