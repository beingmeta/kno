#!/bin/sh

usage (){
    echo "Usage: knobuild cmd args..., e.g.";
    echo "  debchangelog pkgname [distro] [status=stable] [version] < base_changelog";
    echo "  getbuildopt optname [default]";
    echo "  help cmd";
}

if [ $# -lt 2 ]; then
    usage;
    exit;
fi

getbuildopt_usage() {
    echo "getbuildopt optname [default]";
    echo "Gets a build configuration option, trying (in order):";
    echo "  1. the file .optname in the current directory";
    echo "  2. the file .opts/optname in your (the user's) home directory";
    echo "  3. the file optname in the @buildopts_dir@ directory";
    echo "  4. any defined value for opt_optname in the environment";
    echo "  5. the default argument, if provided";
}

debchangelog_usage() {
    echo "debchangelog pkgname [distro] [status=stable] [version] < base_changelog";
    echo "  Creates a new debian changelog from an existing \"base\" changelog";
    echo "  If *version* is not provided, it is computed from either the";
    echo "   output of `git describe` (stripping off the initial *pkg_name*),"; 
    echo "   the environment variable USE_VERSION, the file ./etc/version, "; 
    echo "   or the combination of the major.minor KNO version and the file ";
    echo "   ./etc/release";
}

cmd=$1; shift;
case $cmd in
    debchangelog)
	PKGNAME=${1:-${PKG_NAME}};
	DISTRO=${2:-debian};
	STATUS=${3:-stable};
	VERSION=$4;
	if [ -z "${URGENCY}" ]; then URGENCY=medium; fi
	URGENCY=${5:-medium};
	DATE=`date -R`;
	if [ ! -z "${VERSION}" ]; then
	    version=${VERSION};
	elif which git 2>&1 > /dev/null && git describe 2>&1 > /dev/null; then
	    gitid=`git describe`;
	    version=`git describe | sed -e "s/-g[0123456789ABCDEFabcdef]*$//" | sed -e "s/^${PKGNAME}-//"`;
	elif [ ! -z "${USE_VERSION}" ]; then
	    version="${USE_VERSION}";
	elif [ -f etc/version ]; then
	    version=$(cat etc/version);
	elif [ -f etc/release ]; then
	    version=$(knoconfig major).$(knoconfig minor).$(cat etc/release);
	else
	    version=$(knoconfig version);
	fi;
	if [ -z "${STATUS}" ] || [ ${STATUS} = "stable" ]; then
	    echo ${PKGNAME} \(${version}\) ${DISTRO}\; urgency=${URGENCY}
	else
	    echo ${PKGNAME} \(${version}\) ${DISTRO}-${STATUS}\; urgency=${URGENCY}
	fi;
	echo
	echo "  * ${gitid} point release of ${PKGNAME} for ${DISTRO} (${STATUS})"
	echo
	echo " -- Repository Manager <repoman@beingmeta.com>  ${DATE}"
	echo
	cat -
	;;
    getbuildopt)
	if [ $# -lt 1 ]; then
	    getbuildopt_usage;
	else
	    optname=$1
	    dflt=$2
	    env_name="${optname}_buildopt"
	    if [ -f ./.${optname} ]; then
		cat ./.${optname};
	    elif [ -f ~/.opts/${optname} ]; then
		cat ~/.opts/${optname};
	    elif [ -f @buildopts_dir@/${optname} ]; then
		cat ~/.opts/${optname};
	    elif printenv ${env_name} 2>&1 > /dev/null; then
		printenv ${env_name};
	    elif [ $# -gt 1 ]; then
		echo $dflt;
	    else
		return 1;
	    fi;
	fi;
	return 0;
	;;
    help|usage) 
	if [ $# -lt 2 ]; then
	    usage;
	    exit;
	else case $2 in
		 getbuildopt)
		     getbuildopt_usage;;
		 debchangelog)
		     debchangelog_usage;;
		 help|usage)
		     echo "Just leave off the second help";;
		 default)
		     echo "Unknown command $2";
	     esac;
	fi;;
    *)
	usage;
	exit;
esac
