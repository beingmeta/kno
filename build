#!/bin/bash

CONFIG_ARGS=
MAKE_ARGS=
BUILD=$(pwd)
SRC=$(dirname $(pwd))
doclean=1;
if test -f ./.with_parseltongue; then
    with_parseltongue=yes
else
    with_parseltongue=no
fi;

while [ $# -gt 0 ]; do
    arg=$1
    case ${arg} in
	current|.)
	    BRANCH="use_current_branch";
	    ;;
	noclean|keep)
	    doclean=1;
	    ;;
	dev)
	    CONFIG_ARGS="--with-libscm=${BUILD}/src/libscm/ ${CONFIG_ARGS}";
	    CONFIG_ARGS="--with-loadpath=${SRC}/fdmodules/%/module.scm:${SRC}/fdmodules/%.scm ${CONFIG_ARGS}";
	    ;;
	ipeval)
	    CONFIG_ARGS="--with-ipeval ${CONFIG_ARGS}";
	    ;;
	libc|tcmalloc|jemalloc|asan|asan_noleak|tcmalloc_debug|tcmalloc_minimal|gperftools|asan_thread)
	    CONFIG_ARGS="--with-malloc=${arg} ${CONFIG_ARGS}"; 
	    ;;
	debug|production|install|nitpick|fast|install-bin|standard|usable|working)
	    MAKE_ARGS="${MAKE_ARGS} ${arg}";
	    ;;
	tests|memtests|leaktests|libtests|schemetests|dbtests|cmdtests)
	    MAKE_ARGS="${MAKE_ARGS} ${arg}";
	    ;;
	python|parseltongue)
	    with_parseltongue = yes
	    ;;
	nopython|noparseltongue)
	    with_parseltongue = no
	    ;;
	-[a-zA-Z])
	    MAKE_ARGS="${arg} ${MAKE_ARGS}"; 
	    ;;
	-M*)
	    MAKE_ARGS="${arg#-M} ${MAKE_ARGS}"; 
	    ;;
	--make=*)
	    MAKE_ARGS="${arg#--make=} ${MAKE_ARGS}"; 
	    ;;
	-C*)
	    CONFIG_ARGS="${arg#-C} ${CONFIG_ARGS}"; 
	    ;;
	--config=*)
	    CONFIG_ARGS="${arg#--config=} ${CONFIG_ARGS}"; 
	    ;;
	-*)
	    CONFIG_ARGS="${arg} ${CONFIG_ARGS}"; 
	    ;;
	*=*)
	    MAKE_ARGS="${arg} ${MAKE_ARGS}"; 
	    ;;
	*)
	    if git branch -a | egrep "(^|/)${arg}$" > /dev/null; then
		if [ -z "${BRANCH}" ]; then
		    BRANCH=${arg};
		elif [ "${BRANCH}" = ${arg} ]; then
		    echo "Duplicate branch spec ${arg}";
		else
		    echo "Passing second branch name (${arg}) to MAKE";
		fi;
	    else
		MAKE_ARGS="${arg} ${MAKE_ARGS}"; 
	    fi;
	    ;;
    esac;
    shift;
done;

if [ "${with_parseltongue}" == "yes" ]; then
    CONFIG_ARGS="--with-parseltongue ${CONFIG_ARGS}"
fi;

# Check if the branch is current, if so make the value "use_current_branch"
# This simplifies the doclean/noclean logic below
if [ ! -z ${BRANCH} ] && [ ! ${BRANCH} = "use_current_branch" ]; then
    if git branch | egrep "^[*] ${BRANCH}"; then
	BRANCH="use_current_branch";
    fi;
fi;

if [ -z "${BRANCH}" ]; then BRANCH=use_current_branch; fi

if [ ! -z "${DRY_RUN}" ]; then
    echo BRANCH=${BRANCH}
    echo MAKE_ARGS=${MAKE_ARGS}
    echo CONFIG_ARGS=${CONFIG_ARGS}
    exit;
fi;

if [ ! ${BRANCH} = "use_current_branch" ]; then
   git checkout ${BRANCH};
   ./distclean;
elif [ ${doclean} ]; then
   ./distclean;
else echo "Not cleaning distribution";
fi;



./configure ${CONFIG_ARGS}

make -j ${MAKE_ARGS} $*
